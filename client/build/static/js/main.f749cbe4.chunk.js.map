{"version":3,"sources":["Loader.js","i18n.js","App.js","Diagrams.js","index.js"],"names":["Loader","className","i18n","title","en","ru","fab","married","marriedTrue","marriedFalse","dependents","education","educationTrue","educationFalse","selfEmployed","selfEmployedTrue","selfEmployedFalse","creditHistory","creditHistoryTrue","creditHistoryFalse","income","coapplicantIncome","amount","checkButton","loanRejected","loanResolved","collapsibleTree","radialTree","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","root","flexGrow","menuButton","marginRight","container","display","flexWrap","textField","marginLeft","width","card","maxWidth","App","classes","useState","history","state","setState","valid","setValid","decision","setDecision","loaded","setLoaded","lang","setLang","fetchData","axios","get","then","data","svg","d3","tree","nodeSize","diagonal","x","d","y","x0","dy","y0","descendants","forEach","i","id","_children","children","depth","name","length","gLink","append","attr","gNode","update","source","duration","altKey","nodes","reverse","links","left","right","eachBefore","node","transition","Math","sqrt","selectAll","_groups","nodeEnter","enter","on","text","clone","lower","merge","exit","remove","link","target","linkEnter","o","buildCollapsibleTree","size","PI","sort","a","b","join","angle","radius","this","getBBox","height","buildRadialTidyTree","useEffect","promiseRetry","retry","catch","Object","values","every","Boolean","handleChange","param","event","value","AppBar","position","Toolbar","Typography","variant","Fab","color","aria-label","style","top","onClick","Grid","direction","justify","alignItems","FormControl","InputLabel","Select","native","onChange","autoWidth","noValidate","autoComplete","TextField","type","label","Button","disabled","post","Card","CardContent","gutterBottom","component","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","heading","ExpansionPanelDetails","overflow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f749cbe4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader-wrapper\">\r\n    <div className=\"lds-ellipsis\">\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","export const i18n = {\r\n  title: {\r\n    en: 'Credit Scoring System',\r\n    ru: 'Система кредитного скоринга'\r\n  },\r\n  fab: {\r\n    en: 'EN',\r\n    ru: 'RU'\r\n  },\r\n  married: {\r\n    en: 'Married',\r\n    ru: 'Брак'\r\n  },\r\n  marriedTrue: {\r\n    en: \"I'm married\",\r\n    ru: 'Я женат'\r\n  },\r\n  marriedFalse: {\r\n    en: \"I'm not married\",\r\n    ru: 'Я не женат'\r\n  },\r\n  dependents: {\r\n    en: 'Dependents',\r\n    ru: 'Иждивенцы'\r\n  },\r\n  education: {\r\n    en: 'Education',\r\n    ru: 'Высшее образование'\r\n  },\r\n  educationTrue: {\r\n    en: 'Graduate',\r\n    ru: 'Имею'\r\n  },\r\n  educationFalse: {\r\n    en: 'Non Graduate',\r\n    ru: 'Не имею'\r\n  },\r\n  selfEmployed: {\r\n    en: 'Self Employed',\r\n    ru: 'ИП'\r\n  },\r\n  selfEmployedTrue: {\r\n    en: 'Yes',\r\n    ru: 'Да'\r\n  },\r\n  selfEmployedFalse: {\r\n    en: 'No',\r\n    ru: 'Нет'\r\n  },\r\n  creditHistory: {\r\n    en: 'Credit History',\r\n    ru: 'Кредитная история'\r\n  },\r\n  creditHistoryTrue: {\r\n    en: 'Good/None',\r\n    ru: 'Хорошая/Не имею'\r\n  },\r\n  creditHistoryFalse: {\r\n    en: 'Bad',\r\n    ru: 'Плохая'\r\n  },\r\n  income: {\r\n    en: 'Income ($)',\r\n    ru: 'Доход ($)'\r\n  },\r\n  coapplicantIncome: {\r\n    en: 'Coapplicant Income ($)',\r\n    ru: 'Доход Сожителя ($)'\r\n  },\r\n  amount: {\r\n    en: 'Amount of credit (1000 $)',\r\n    ru: 'Сумма кредита (1000 $)'\r\n  },\r\n  checkButton: {\r\n    en: 'Check loan',\r\n    ru: 'Проверить заявку'\r\n  },\r\n  loanRejected: {\r\n    en: 'Loan rejected',\r\n    ru: 'Заявка отклонена'\r\n  },\r\n  loanResolved: {\r\n    en: 'Loan resolved',\r\n    ru: 'Заявка одобрена'\r\n  },\r\n  collapsibleTree: {\r\n    en: 'Collapsible tree',\r\n    ru: 'Сворачиваемое дерево'\r\n  },\r\n  radialTree: {\r\n    en: 'Radial tree',\r\n    ru: 'Радиальное дерево'\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './index.css';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { buildCollapsibleTree, buildRadialTidyTree } from './Diagrams';\r\nimport promiseRetry from 'promise-retry';\r\nimport Loader from './Loader';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { i18n } from './i18n';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap'\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200\r\n  },\r\n  card: {\r\n    margin: '20px 0',\r\n    maxWidth: 345\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    married: null,\r\n    dependents: null,\r\n    education: null,\r\n    selfEmployed: null,\r\n    income: null,\r\n    coapplicantIncome: null,\r\n    amount: null,\r\n    history: null\r\n  });\r\n\r\n  const [valid, setValid] = useState(false);\r\n  const [decision, setDecision] = useState(null);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [lang, setLang] = useState('en');\r\n\r\n  const fetchData = () =>\r\n    axios.get(`/data`).then(({ data }) => {\r\n      if (decision !== null) {\r\n        buildCollapsibleTree(data);\r\n        buildRadialTidyTree(data);\r\n      }\r\n      setLoaded(true);\r\n    });\r\n\r\n  useEffect(() => {\r\n    promiseRetry(function(retry) {\r\n      return fetchData().catch(retry);\r\n    });\r\n  }, [fetchData]);\r\n\r\n  const validate = () => {\r\n    if (\r\n      Object.values(state).every(x => x !== null && Boolean(x)) &&\r\n      state.income >= 0 &&\r\n      state.coapplicantIncome >= 0 &&\r\n      state.amount >= 0\r\n    )\r\n      setValid(true);\r\n    else setValid(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    validate();\r\n  });\r\n\r\n  const handleChange = param => event => {\r\n    setState({\r\n      ...state,\r\n      [param]: event.target.value\r\n    });\r\n  };\r\n\r\n  const sendData = () => {\r\n    axios.post(`/data`, state).then(({ data }) => {\r\n      setDecision(data);\r\n    });\r\n  };\r\n\r\n  const handleChangeLang = () => {\r\n    if (lang === 'en') {\r\n      setLang('ru');\r\n    } else setLang('en');\r\n  };\r\n\r\n  return loaded ? (\r\n    <div className=\"container\">\r\n      <AppBar position=\"static\" id=\"hideOnPrint\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {i18n.title[lang]}\r\n          </Typography>\r\n          <Fab\r\n            color=\"secondary\"\r\n            aria-label=\"add\"\r\n            style={{ position: 'absolute', top: 16, right: 40 }}\r\n            onClick={handleChangeLang}\r\n          >\r\n            {i18n.fab[lang]}\r\n          </Fab>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel>{i18n.married[lang]}</InputLabel>\r\n          <Select\r\n            native\r\n            value={state.married || ''}\r\n            onChange={handleChange('married')}\r\n            autoWidth\r\n          >\r\n            <option value=\"\" />\r\n            <option value={1}>{i18n.marriedTrue[lang]}</option>\r\n            <option value={0}>{i18n.marriedFalse[lang]}</option>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel>{i18n.dependents[lang]}</InputLabel>\r\n          <Select\r\n            native\r\n            value={state.dependents || ''}\r\n            onChange={handleChange('dependents')}\r\n          >\r\n            <option value=\"\" />\r\n            <option value={0}>0</option>\r\n            <option value={1}>1</option>\r\n            <option value={2}>2</option>\r\n            <option value={3}>3+</option>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel>{i18n.education[lang]}</InputLabel>\r\n          <Select\r\n            native\r\n            value={state.education || ''}\r\n            onChange={handleChange('education')}\r\n          >\r\n            <option value=\"\" />\r\n            <option value={1}>{i18n.educationTrue[lang]}</option>\r\n            <option value={0}>{i18n.educationFalse[lang]}</option>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel>{i18n.selfEmployed[lang]}</InputLabel>\r\n          <Select\r\n            native\r\n            value={state.selfEmployed || ''}\r\n            onChange={handleChange('selfEmployed')}\r\n          >\r\n            <option value=\"\" />\r\n            <option value={1}>{i18n.selfEmployedTrue[lang]}</option>\r\n            <option value={0}>{i18n.selfEmployedFalse[lang]}</option>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel>{i18n.creditHistory[lang]}</InputLabel>\r\n          <Select native value={state.history || ''} onChange={handleChange('history')}>\r\n            <option value=\"\" />\r\n            <option value={1}>{i18n.creditHistoryTrue[lang]}</option>\r\n            <option value={0}>{i18n.creditHistoryFalse[lang]}</option>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <TextField\r\n            type=\"number\"\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            value={state.income || ''}\r\n            label={i18n.income[lang]}\r\n            onChange={handleChange('income')}\r\n          />\r\n          <TextField\r\n            type=\"number\"\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            value={state.coapplicantIncome || ''}\r\n            label={i18n.coapplicantIncome[lang]}\r\n            onChange={handleChange('coapplicantIncome')}\r\n          />\r\n          <TextField\r\n            type=\"number\"\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            value={state.amount || ''}\r\n            label={i18n.amount[lang]}\r\n            onChange={handleChange('amount')}\r\n          />\r\n        </form>\r\n      </Grid>\r\n\r\n      <Button\r\n        id=\"hideOnPrint\"\r\n        style={{ margin: '20px 24px' }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        disabled={!valid}\r\n        onClick={() => sendData()}\r\n      >\r\n        {i18n.checkButton[lang]}\r\n      </Button>\r\n\r\n      {decision !== null && (\r\n        <>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              {decision === false ? (\r\n                <>\r\n                  <CancelIcon />\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {i18n.loanRejected[lang]}\r\n                  </Typography>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <CheckCircleIcon />\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {i18n.loanResolved[lang]}\r\n                  </Typography>\r\n                </>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <ExpansionPanel id=\"hideOnPrint\">\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n            >\r\n              <Typography className={classes.heading}>\r\n                {i18n.collapsibleTree[lang]}\r\n              </Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails style={{ overflow: 'scroll', display: 'block' }}>\r\n              <svg id=\"collapsibleTree\" />\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n\r\n          <ExpansionPanel id=\"forPrint\">\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n            >\r\n              <Typography className={classes.heading}>{i18n.radialTree[lang]}</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails id=\"forPrint\">\r\n              <svg width={1000} height={1000} id=\"radialTidyTree\" />\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        </>\r\n      )}\r\n    </div>\r\n  ) : (\r\n    <Loader />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import * as d3 from 'd3';\r\n\r\nexport function buildRadialTidyTree(data) {\r\n  const svg = d3.select('#radialTidyTree');\r\n  const tree = d3.cluster().size([2 * Math.PI, 600]);\r\n  const root = tree(\r\n    d3.hierarchy(data).sort((a, b) => d3.ascending(a.data.name, b.data.name))\r\n  );\r\n\r\n  const link = svg\r\n    .append('g')\r\n    .attr('fill', 'none')\r\n    .attr('stroke', '#555')\r\n    .attr('stroke-opacity', 0.4)\r\n    .attr('stroke-width', 1.5)\r\n    .selectAll('path')\r\n    .data(root.links())\r\n    .join('path')\r\n    .attr(\r\n      'd',\r\n      d3\r\n        .linkRadial()\r\n        .angle(d => d.x)\r\n        .radius(d => d.y)\r\n    );\r\n\r\n  const node = svg\r\n    .append('g')\r\n    .attr('stroke-linejoin', 'round')\r\n    .attr('stroke-width', 3)\r\n    .selectAll('g')\r\n    .data(root.descendants().reverse())\r\n    .join('g')\r\n    .attr(\r\n      'transform',\r\n      d => `\r\n        rotate(${(d.x * 180) / Math.PI - 90})\r\n        translate(${d.y},0)\r\n      `\r\n    );\r\n\r\n  node\r\n    .append('circle')\r\n    .attr('fill', d => (d.children ? '#555' : '#999'))\r\n    .attr('r', 2.5);\r\n\r\n  node\r\n    .append('text')\r\n    .attr('dy', '0.31em')\r\n    .attr('x', d => (d.x < Math.PI === !d.children ? 6 : -6))\r\n    .attr('text-anchor', d => (d.x < Math.PI === !d.children ? 'start' : 'end'))\r\n    .attr('transform', d => (d.x >= Math.PI ? 'rotate(180)' : null))\r\n    .text(d => d.data.name)\r\n    .clone(true)\r\n    .lower()\r\n    .attr('stroke', 'white');\r\n\r\n  svg.node();\r\n\r\n  function autoBox() {\r\n    const { x, y, width, height } = this.getBBox();\r\n    return [x, y, width, height];\r\n  }\r\n\r\n  svg.attr('viewBox', autoBox);\r\n}\r\n\r\nexport function buildCollapsibleTree(data) {\r\n  const svg = d3.select('#collapsibleTree');\r\n\r\n  const margin = {\r\n    top: 10,\r\n    right: 120,\r\n    bottom: 10,\r\n    left: 100,\r\n  };\r\n\r\n  const dy = 150;\r\n  const dx = 30;\r\n  const tree = d3.tree().nodeSize([dx, dy]);\r\n\r\n  const diagonal = d3\r\n    .linkHorizontal()\r\n    .x(d => d.y)\r\n    .y(d => d.x);\r\n\r\n  const root = d3.hierarchy(data);\r\n\r\n  root.x0 = dy / 2;\r\n  root.y0 = 0;\r\n\r\n  root.descendants().forEach((d, i) => {\r\n    d.id = i;\r\n    d._children = d.children;\r\n    if (d.depth && d.data.name.length !== 7) d.children = null;\r\n  });\r\n\r\n  const gLink = svg\r\n    .append('g')\r\n    .attr('fill', 'none')\r\n    .attr('stroke', '#555')\r\n    .attr('stroke-opacity', 0.4)\r\n    .attr('stroke-width', 1.5);\r\n\r\n  const gNode = svg\r\n    .append('g')\r\n    .attr('cursor', 'pointer')\r\n    .attr('pointer-events', 'all');\r\n\r\n  function update(source) {\r\n    const duration = d3.event && d3.event.altKey ? 2500 : 250;\r\n    const nodes = root.descendants().reverse();\r\n    const links = root.links();\r\n\r\n    // Compute the new tree layout.\r\n    tree(root);\r\n\r\n    let left = root;\r\n    let right = root;\r\n    root.eachBefore(node => {\r\n      if (node.x < left.x) left = node;\r\n      if (node.x > right.x) right = node;\r\n    });\r\n\r\n    const transition = svg\r\n      .transition()\r\n      .duration(duration)\r\n      .attr(\r\n        'height',\r\n        Math.sqrt(gNode.selectAll('g').data(nodes, d => d.id)._groups[0].length) * 100\r\n      )\r\n      .attr('viewBox', [\r\n        -margin.left,\r\n        left.x - margin.top,\r\n        // eslint-disable-next-line no-restricted-properties\r\n        gNode.selectAll('g').data(nodes, d => d.id)._groups[0].length * 75 + 200,\r\n        Math.sqrt(gNode.selectAll('g').data(nodes, d => d.id)._groups[0].length) * 100,\r\n      ]);\r\n\r\n    // Update the nodes…\r\n    const node = gNode.selectAll('g').data(nodes, d => d.id);\r\n\r\n    // Enter any new nodes at the parent's previous position.\r\n    const nodeEnter = node\r\n      .enter()\r\n      .append('g')\r\n      .attr('transform', d => `translate(${source.y0},${source.x0})`)\r\n      .attr('fill-opacity', 0)\r\n      .attr('stroke-opacity', 0)\r\n      .on('click', d => {\r\n        d.children = d.children ? null : d._children;\r\n        update(d);\r\n      });\r\n\r\n    nodeEnter\r\n      .append('circle')\r\n      .attr('r', 2.5)\r\n      .attr('fill', d => (d._children ? '#555' : '#999'))\r\n      .attr('stroke-width', 10);\r\n\r\n    nodeEnter\r\n      .append('text')\r\n      .attr('dy', '0.31em')\r\n      .attr('x', d => (d._children ? -6 : 6))\r\n      .attr('text-anchor', d => (d._children ? 'end' : 'start'))\r\n      .text(d => d.data.name)\r\n      .clone(true)\r\n      .lower()\r\n      .attr('stroke-linejoin', 'round')\r\n      .attr('stroke-width', 3)\r\n      .attr('stroke', 'white');\r\n\r\n    // Transition nodes to their new position.\r\n    const nodeUpdate = node\r\n      .merge(nodeEnter)\r\n      .transition(transition)\r\n      .attr('transform', d => `translate(${d.y},${d.x})`)\r\n      .attr('fill-opacity', 1)\r\n      .attr('stroke-opacity', 1);\r\n\r\n    // Transition exiting nodes to the parent's new position.\r\n    const nodeExit = node\r\n      .exit()\r\n      .transition(transition)\r\n      .remove()\r\n      .attr('transform', d => `translate(${source.y},${source.x})`)\r\n      .attr('fill-opacity', 0)\r\n      .attr('stroke-opacity', 0);\r\n\r\n    // Update the links…\r\n    const link = gLink.selectAll('path').data(links, d => d.target.id);\r\n\r\n    // Enter any new links at the parent's previous position.\r\n    const linkEnter = link\r\n      .enter()\r\n      .append('path')\r\n      .attr('d', d => {\r\n        const o = { x: source.x0, y: source.y0 };\r\n        return diagonal({ source: o, target: o });\r\n      });\r\n\r\n    // Transition links to their new position.\r\n    link\r\n      .merge(linkEnter)\r\n      .transition(transition)\r\n      .attr('d', diagonal);\r\n\r\n    // Transition exiting nodes to the parent's new position.\r\n    link\r\n      .exit()\r\n      .transition(transition)\r\n      .remove()\r\n      .attr('d', d => {\r\n        const o = { x: source.x, y: source.y };\r\n        return diagonal({ source: o, target: o });\r\n      });\r\n\r\n    // Stash the old positions for transition.\r\n    root.eachBefore(d => {\r\n      d.x0 = d.x;\r\n      d.y0 = d.y;\r\n    });\r\n  }\r\n\r\n  update(root);\r\n\r\n  return svg.node();\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}